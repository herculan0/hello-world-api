name: PR Checks
on:
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  app-test:
    name: Test application
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Build image
        run: docker build -t hello-world-api ./app
      
      - name: Test API endpoints
        run: |
          docker run -d -p 3000:3000 hello-world-api
          sleep 3
          # Test each endpoint - fail if any return non-200
          curl -sf http://localhost:3000/hello_world || exit 1
          curl -sf http://localhost:3000/healthcheck || exit 1
          curl -sf "http://localhost:3000/current_time?name=Test" || exit 1
          echo "All API tests passed!"
          
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'hello-world-api'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::654654485498:role/gh-role
          aws-region: us-east-1
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      
      - name: Terraform Init
        working-directory: ./infrastructure
        run: terraform init
      
      - name: Terraform Validate
        working-directory: ./infrastructure
        run: terraform validate

      - name: Terraform Plan
        id: plan
        working-directory: ./infrastructure
        run: |
          terraform plan -no-color -out=tfplan
          echo "PLAN_EXIT_CODE=$?" >> $GITHUB_ENV
      
      - name: Show Plan
        id: show
        working-directory: ./infrastructure
        run: |
          terraform show -no-color tfplan > plan.txt
          
      - name: Post Plan to PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('./infrastructure/plan.txt', 'utf8');
            
            const comment = `### Terraform Plan
            
            <details>
            <summary>Click to see the plan</summary>
            
            \`\`\`
            ${plan}
            \`\`\`
            </details>`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });